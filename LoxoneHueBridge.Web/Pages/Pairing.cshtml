@page
@model LoxoneHueBridge.Web.Pages.PairingModel
@{
    ViewData["Title"] = "Hue Bridge Pairing";
}

<div class="row">
    <div class="col-md-8 mx-auto">
        <div class="card">
            <div class="card-header">
                <h4 class="mb-0">
                    <i class="fas fa-link"></i> Philips Hue Bridge Pairing
                </h4>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        <i class="fas fa-exclamation-triangle"></i>
                        @Model.ErrorMessage
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                {
                    <div class="alert alert-success" role="alert">
                        <i class="fas fa-check-circle"></i>
                        @Model.SuccessMessage
                    </div>
                }

                @if (Model.BridgeStatus?.IsConnected == true)
                {
                    <div class="alert alert-success" role="alert">
                        <h5 class="alert-heading">Already Paired!</h5>
                        <p>Your LoxoneHueBridge is already successfully paired with the Hue Bridge.</p>
                        <hr>
                        <p class="mb-0">
                            <strong>Bridge IP:</strong> @Model.BridgeStatus.IpAddress<br>
                            <strong>Bridge ID:</strong> @Model.BridgeStatus.BridgeId<br>
                            <strong>API Version:</strong> @Model.BridgeStatus.ApiVersion
                        </p>
                        <div class="mt-3">
                            <form method="post" asp-page-handler="Unpair" class="d-inline">
                                <button type="submit" class="btn btn-outline-danger">
                                    <i class="fas fa-unlink"></i> Unpair Bridge
                                </button>
                            </form>
                        </div>
                    </div>
                }
                else if (Model.BridgeStatus?.IpAddress != null && !Model.BridgeStatus.IsPaired)
                {
                    <div class="alert alert-warning" role="alert">
                        <h5 class="alert-heading">Bridge Discovered - Ready to Pair!</h5>
                        <p>A Hue Bridge has been discovered but is not yet paired with this application.</p>
                        <p class="mb-0">
                            <strong>Bridge IP:</strong> @Model.BridgeStatus.IpAddress<br>
                            <strong>Bridge ID:</strong> @Model.BridgeStatus.BridgeId
                        </p>
                    </div>

                    <div class="pairing-instructions bg-light p-3 rounded mb-3">
                        <h6><i class="fas fa-hand-point-up"></i> Press the Bridge Button</h6>
                        <p class="mb-2">Press and release the button on top of your Hue Bridge. The LED will turn blue.</p>
                        <p class="mb-0 text-muted">You have 30 seconds to complete the pairing process.</p>
                    </div>

                    <form method="post" asp-page-handler="Pair">
                        <input type="hidden" name="bridgeIp" value="@Model.BridgeStatus.IpAddress" />
                        <button type="submit" class="btn btn-success btn-lg">
                            <i class="fas fa-link"></i> Pair with Bridge
                        </button>
                    </form>
                }
                else
                {
                    <div class="pairing-steps">
                        <h5>Pairing Instructions</h5>
                        <ol>
                            <li>Make sure your Hue Bridge is powered on and connected to the network</li>
                            <li>Click "Discover Bridge" to find your Hue Bridge automatically</li>
                            <li>Press the button on your Hue Bridge</li>
                            <li>Click "Pair with Bridge" within 30 seconds</li>
                        </ol>

                        @if (Model.DiscoveredBridge != null)
                        {
                            <div class="alert alert-info">
                                <h6 class="alert-heading">Bridge Discovered!</h6>
                                <p><strong>IP Address:</strong> @Model.DiscoveredBridge.IpAddress</p>
                                <p><strong>Bridge ID:</strong> @Model.DiscoveredBridge.BridgeId</p>
                                <p class="mb-0">Now press the button on your Hue Bridge and click "Pair" below.</p>
                            </div>

                            <div class="pairing-instructions bg-light p-3 rounded mb-3">
                                <h6><i class="fas fa-hand-point-up"></i> Press the Bridge Button</h6>
                                <p class="mb-2">Press and release the button on top of your Hue Bridge. The LED will turn blue.</p>
                                <p class="mb-0 text-muted">You have 30 seconds to complete the pairing process.</p>
                            </div>

                            <form method="post" asp-page-handler="Pair">
                                <input type="hidden" name="bridgeIp" value="@Model.DiscoveredBridge.IpAddress" />
                                <button type="submit" class="btn btn-success btn-lg">
                                    <i class="fas fa-link"></i> Pair with Bridge
                                </button>
                            </form>
                        }
                        else
                        {
                            <form method="post" asp-page-handler="Discover" class="mb-3">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-search"></i> Discover Bridge
                                </button>
                            </form>

                            <div class="manual-setup mt-4">
                                <h6>Manual Setup</h6>
                                <p>If automatic discovery doesn't work, you can enter the bridge IP address manually:</p>
                                <form method="post" asp-page-handler="ManualSetup">
                                    <div class="input-group mb-3">
                                        <input type="text" class="form-control" name="bridgeIp" 
                                               placeholder="192.168.1.100" 
                                               pattern="^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$"
                                               title="Please enter a valid IP address"
                                               required>
                                        <button type="submit" class="btn btn-outline-secondary">
                                            <i class="fas fa-cog"></i> Manual Setup
                                        </button>
                                    </div>
                                </form>
                            </div>
                        }
                    </div>
                }

                @if (Model.IsProcessing)
                {
                    <div class="text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-2">@Model.ProcessingMessage</p>
                    </div>
                }
            </div>
        </div>

        @if (Model.BridgeStatus?.IsConnected == true && Model.AvailableLights?.Any() == true)
        {
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-lightbulb"></i> Available Lights
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var light in Model.AvailableLights)
                        {
                            <div class="col-md-4 mb-3">
                                <div class="card border-secondary">
                                    <div class="card-body text-center">
                                        <i class="fas fa-lightbulb fa-2x text-warning mb-2"></i>
                                        <h6 class="card-title">@(light.Metadata?.Name ?? light.Id.ToString())</h6>
                                        <p class="card-text small text-muted">
                                            ID: @light.Id<br>
                                            Type: @light.Type<br>
                                            @(light.On.IsOn ? "On" : "Off")
                                        </p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Auto-refresh page status every 5 seconds during pairing
        @if (Model.IsProcessing)
        {
            <text>
            setTimeout(function() {
                window.location.reload();
            }, 3000);
            </text>
        }
    </script>
}
